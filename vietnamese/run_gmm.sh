#!/usr/bin/env bash


if [ "$#" -ne 1 ]; then
  echo "USAGE: $0 <raw_train_dir>"
  exit 1
fi

raw_train_dir=$1

. local/util_funcs.sh
. ./cmd.sh
. ./path.sh

### STAGES
##
#
prep_train_audio=0
extract_train_feats=0
split_train_data=0
prep_train_lang=1
train_gmm=0
#
##
###

### HYPER-PARAMETERS
##
#
num_iters_mono=40
tot_gauss_mono=1000

num_iters_tri=35
tot_gauss_tri=2000
num_leaves_tri=10000
#
##
###

### SHOULD ALREADY EXIST
##
#
# TODO: increase num_procs on remote server
num_procs=8
config_dir=conf
#
##
###

### GENERATED BY SCRIPT
##
#
data_dir=data
exp_dir=exp
mfcc_dir=mfcc

train_subset_name=$(basename $raw_train_dir)
train_acoustic_dir=${data_dir}/$train_subset_name
#
##
###

if [ "$prep_train_audio" -eq "1" ]; then

  printf "\n####==========================####\n"
  printf "#### TRAINING AUDIO DATA PREP ####\n"
  printf "####==========================####\n\n"

  prompt_rm_dir $train_acoustic_dir
  local/prepare_acoustic.sh $raw_train_dir || exit 1
fi

if [ "$extract_train_feats" -eq "1" ]; then

  printf "\n####==========================####\n"
  printf "#### TRAIN FEATURE EXTRACTION ####\n"
  printf "####==========================####\n\n"
  prompt_rm_dir ${exp_dir}/make_mfcc/${train_subset_name} $mfcc_dir

  steps/make_mfcc.sh --nj $num_procs $train_acoustic_dir exp/make_mfcc/$train_subset_name $mfcc_dir
  steps/compute_cmvn_stats.sh $train_acoustic_dir exp/make_mfcc/$train_subset_name $mfcc_dir

  # echo "splitting feats into $num_procs subdirs"
  # utils/split_data.sh $train_acoustic_dir $num_procs || exit 1
fi

if [ $split_train_data -eq 1 ]; then
  # Make small data subsets for easier alignment during early training stages
  # the full train-clean-100 has 29k utterances
  prompt_rm_dir ${data_dir}/{train-2k-shortest,train-5k,train-10k}
  utils/subset_data_dir.sh --shortest $train_acoustic_dir 2000 ${data_dir}/train-2k-shortest
  utils/subset_data_dir.sh $train_acoustic_dir 5000 ${data_dir}/train-5k
  utils/subset_data_dir.sh $train_acoustic_dir 10000 ${data_dir}/train-10k
fi

if [ "$prep_train_lang" -eq "1" ]; then

  printf "\n####====================####\n"
  printf "#### CREATING LANG DATA ####\n"
  printf "####====================####\n\n"

  prompt_rm_dir ${data_dir}/local ${data_dir}/lang

  local/prepare_dict.sh $train_acoustic_dir data/local/dict_nosp || exit 1
  utils/prepare_lang.sh ${data_dir}/local/dict_nosp \
    "<UNK>" ${data_dir}/local/lang_tmp_nosp ${data_dir}/lang_nosp || exit 1
   
fi

if [ "$train_gmm" -eq "1" ]; then

  printf "\n####===============####\n"
  printf "#### TRAINING GMMs ####\n"
  printf "####===============####\n\n"

  ./train_gmm.sh \
    $data_dir \
    $num_iters_mono \
    $tot_gauss_mono \
    $num_iters_tri \
    $tot_gauss_tri \
    $num_leaves_tri \
    $exp_dir \
    $num_procs \
    $train_subset_name
fi

exit
