#!/usr/bin/env bash

# Joshua Meyer (2017)

# USAGE:
#
#      ./run.sh <corpus_name>
#
# INPUT:
#
#    input_dir/
#       lexicon.txt
#       lexicon_nosil.txt
#       phones.txt
#       task.arpabo
#       transcripts
#
#       audio_dir/
#          utterance1.wav
#          utterance2.wav
#          utterance3.wav
#               .
#               .
#          utteranceN.wav
#
#    config_dir/
#       mfcc.conf
#       topo_orig.proto
#
#
# OUTPUT:
#
#    exp_dir
#    feat_dir
#    data_dir
#

if [ "$#" -ne 1 ]; then
  echo "USAGE: $0 <raw_train_dir>"
  exit 1
fi

raw_train_dir=$1
# run=$2

. local/util_funcs.sh

### STAGES
##
#
prep_train_audio=1
extract_train_feats=1
compile_Lfst=1
train_gmm=1

prep_lm=0
compile_graph=0
prep_test_audio=0
extract_test_feats=0
decode_test=0
#
##
###

### HYPER-PARAMETERS
##
#
tot_gauss_mono=1000
num_leaves_tri=1000
tot_gauss_tri=2000
num_iters_mono=25
num_iters_tri=25
#
##
###

### SHOULD ALREADY EXIST
##
#
num_procs=16
unknown_word="<UNK>"
# unknown_phone="SPN"
# silence_phone="SIL"
# input_dir=input_${corpus_name}
# train_data_dir=`cat $input_dir/train_audio_path`
# test_data_dir=`cat $input_dir/test_audio_path`
config_dir=conf
cmd="utils/run.pl"
#
##
###

### GENERATED BY SCRIPT
##
#
data_dir=data
exp_dir=exp
mfcc_dir=mfcc

train_subset_name=$(basename $raw_train_dir)
train_acoustic_dir=${data_dir}/$train_subset_name
#
##
###

if [ "$prep_train_audio" -eq "1" ]; then

  printf "\n####==========================####\n"
  printf "#### TRAINING AUDIO DATA PREP ####\n"
  printf "####==========================####\n\n"

  prompt_rm_dir $train_acoustic_dir
  local/prepare_acoustic.sh $raw_train_dir || exit 1
fi

if [ "$extract_train_feats" -eq "1" ]; then

  printf "\n####==========================####\n"
  printf "#### TRAIN FEATURE EXTRACTION ####\n"
  printf "####==========================####\n\n"
  prompt_rm_dir ${exp_dir}/make_mfcc/${train_subset_name} $mfcc_dir

  steps/make_mfcc.sh --nj $num_procs $train_acoustic_dir exp/make_mfcc/$train_subset_name $mfcc_dir
  steps/compute_cmvn_stats.sh $train_acoustic_dir exp/make_mfcc/$train_subset_name $mfcc_dir

  # echo "splitting feats into $num_procs subdirs"
  # utils/split_data.sh $train_acoustic_dir $num_procs || exit 1
fi

if [ "$compile_Lfst" -eq "1" ]; then

  printf "\n####====================####\n"
  printf "#### CREATING LANG DATA ####\n"
  printf "####====================####\n\n"

  prompt_rm_dir ${data_dir}/local ${data_dir}/lang

  local/prepare_dict.sh $train_acoustic_dir || exit 1
  utils/prepare_lang.sh --position-dependent-phones false \
    ${data_dir}/local/dict ${unknown_word} ${data_dir}/local/lang ${data_dir}/lang || exit 1

fi

if [ "$train_gmm" -eq "1" ]; then

  printf "\n####===============####\n"
  printf "#### TRAINING GMMs ####\n"
  printf "####===============####\n\n"

  ./train_gmm.sh \
    $data_dir \
    $num_iters_mono \
    $tot_gauss_mono \
    $num_iters_tri \
    $tot_gauss_tri \
    $num_leaves_tri \
    $exp_dir \
    $num_procs \
    $train_subset_name
fi

if [ "$prep_lm" -eq "1" ]; then

  printf "\n####==============####\n"
  printf "#### PREPARING LM ####\n"
  printf "####==============####\n\n"

  local/prepare_lm.sh || exit 1

fi

if [ "$compile_graph" -eq "1" ]; then

  printf "\n####===================####\n"
  printf "#### GRAPH COMPILATION ####\n"
  printf "####===================####\n\n"

  utils/mkgraph.sh \
    $input_dir \
    $data_dir \
    $data_dir/lang_decode \
    $exp_dir/triphones/graph \
    $exp_dir/triphones/tree \
    $exp_dir/triphones/final.mdl ||
    printf "\n####\n#### ERROR: mkgraph.sh \n####\n\n" ||
    exit 1

fi

if [ "$prep_test_audio" -eq "1" ]; then

  printf "\n####==========================####\n"
  printf "#### TESTING AUDIO DATA PREP ####\n"
  printf "####==========================####\n\n"

  local/prepare_audio_data.sh \
    $test_data_dir \
    $input_dir/transcripts.test \
    $data_dir \
    test
fi

if [ "$extract_test_feats" -eq "1" ]; then

  printf "\n####=========================####\n"
  printf "#### TEST FEATURE EXTRACTION ####\n"
  printf "####=========================####\n\n"

  ./extract_feats.sh \
    $data_dir/test \
    $plp_dir \
    $num_procs

fi

if [ "$decode_test" -eq "1" ]; then

  printf "\n####================####\n"
  printf "#### BEGIN DECODING ####\n"
  printf "####================####\n\n"

  suffix=${corpus_name}_${run}

  ./test_gmm.sh \
    $exp_dir/triphones/graph/HCLG.fst \
    $exp_dir/triphones/final.mdl \
    $data_dir/test \
    $suffix \
    $num_procs

fi

exit
